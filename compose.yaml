version: '3.8'

services:

# MySQL
  mysql1:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: orders
    ports:
      - "3306:3306"
    volumes:
      - mysql1_data:/var/lib/mysql
    restart: always

# Redis
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    restart: always

# Kafka
  zookeeper:
    image: zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: "my-topic:1:1"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
    depends_on:
      - zookeeper

# Volume
volumes:
  mysql1_data:


#  myapp:
#    image: app:latest
#    ports:
#      - "8080:8080"
#    environment:
#      - SPRING_PROFILES_ACTIVE=local
#    networks:
#      - monitoring
#    depends_on:
#      - mysql1
#
#  prometheus:
#    image: prom/prometheus
#    ports:
#      - "9090:9090"
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#    command: [ "--config.file=/etc/prometheus/prometheus.yml" ]
#    networks:
#      - monitoring
#
#  grafana:
#    image: grafana/grafana
#    ports:
#      - "3001:3000"
#    networks:
#      - monitoring